<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="TasksCompletedView">
        <attr name="radius" format="dimension" />
        <attr name="strokeWidth" format="dimension" />
        <attr name="circleColor" format="color" />
        <attr name="ringColor" format="color" />
    </declare-styleable>

    <!-- LockPatternView class attributes -->
    <declare-styleable name="LockPatternView">

        <!--
             Aspect to use when drawing LockPatternView. Choices are "square"(default), "lock_width"
             or "lock_height"
        -->
        <attr name="aspect">
            <enum name="square" value="0" />
            <enum name="lockWidth" value="1" />
            <enum name="lockHeight" value="2" />
        </attr>
        <attr name="line" format="color" />
        <attr name="btnNormal" format="reference" />
        <attr name="btnTouched" format="reference" />
        <attr name="circleNormal" format="reference" />
        <attr name="circleGreen" format="reference" />
        <attr name="circleRed" format="reference" />
        <attr name="arrowGreenUp" format="reference" />
        <attr name="arrowRedUp" format="reference" />
    </declare-styleable>
    <declare-styleable name="PullToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.



        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.



        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>
    <declare-styleable name="FancyCoverFlow">
        <attr name="unselectedAlpha" format="float" />
        <attr name="unselectedSaturation" format="float" />
        <attr name="unselectedScale" format="float" />
        <attr name="maxRotation" format="integer" />
        <attr name="scaleDownGravity" format="float" />
        <attr name="actionDistance" format="integer">
            <enum name="auto" value="2147483647" />
        </attr>
    </declare-styleable>
    <declare-styleable name="ActionView">
        <attr name="action">
            <enum name="status" value="1" />
            <enum name="delete" value="2" />
        </attr>
    </declare-styleable>
    <declare-styleable name="RoundProgressBar">
        <attr name="roundColor" format="color" />
        <attr name="roundProgressColor" format="color" />
        <attr name="roundWidth" format="dimension"></attr>
        <attr name="textColor" format="color" />
        <attr name="textSize" format="dimension" />
        <attr name="max" format="integer"></attr>
        <attr name="textIsDisplayable" format="boolean"></attr>
        <attr name="style">
            <enum name="STROKE" value="0"></enum>
            <enum name="FILL" value="1"></enum>
        </attr>
        <attr name="centerTextStyle">
            <enum name="PERCENT" value="0"></enum>
            <enum name="CUSTOM" value="1"></enum>
        </attr>
    </declare-styleable>
    <declare-styleable name="GestureDirection">
        <attr name="Direction">
            <enum name="left" value="0" />
            <enum name="right" value="1" />
        </attr>
    </declare-styleable>

    <declare-styleable name="PagerSlidingTabStrip">
        <attr name="pstsIndicatorColor" format="color" />
        <attr name="pstsUnderlineColor" format="color" />
        <attr name="pstsDividerColor" format="color" />
        <attr name="pstsIndicatorPadding" format="dimension" />
        <attr name="pstsIndicatorHeight" format="dimension" />
        <attr name="pstsUnderlineHeight" format="dimension" />
        <attr name="pstsDividerPadding" format="dimension" />
        <attr name="pstsTabPaddingLeftRight" format="dimension" />
        <attr name="pstsScrollOffset" format="dimension" />
        <attr name="pstsTabBackground" format="reference" />
        <attr name="pstsShouldExpand" format="boolean" />
        <attr name="pstsTextAllCaps" format="boolean" />
    </declare-styleable>

    <declare-styleable name="LiveDisplay">
        <attr name="is_live" format="boolean" />
    </declare-styleable>



    <declare-styleable name="GainGraphView">
        <attr format="boolean" name="show_percent"/>
    </declare-styleable>

    <declare-styleable name="KLine">
        <attr name="KLine_mode" format="integer" localization="suggested"/>
    </declare-styleable>

    <declare-styleable name="MinuteLine">
        <attr name="minute_mode" format="integer" localization="suggested"/>
    </declare-styleable>

    <!-- CircularProgressView -->
    <declare-styleable name="CircularProgressView">
        <attr name="cpv_progress" format="float" />
        <attr name="cpv_maxProgress" format="float" />
        <attr name="cpv_animDuration" format="integer" />
        <attr name="cpv_animSwoopDuration" format="integer" />
        <attr name="cpv_animSyncDuration" format="integer" />
        <attr name="cpv_color" format="color"/>
        <attr name="cpv_thickness" format="dimension"/>
        <attr name="cpv_indeterminate" format="boolean" />
        <attr name="cpv_animAutostart" format="boolean" />
        <attr name="cpv_animSteps" format="integer" />
        <attr name="cpv_startAngle" format="float" />
    </declare-styleable>

</resources>